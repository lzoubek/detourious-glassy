

#define FILEMAN_ICON(ALIGN, REL1, OFF1, REL2, OFF2)			\
	part {													\
		name: "icon_box_shadow";							\
		type: IMAGE;										\
		mouse_events: 0;									\
		clip_to: "e.swallow.icon_clip";						\
		description {										\
			state: "default" 0.0;							\
			color: 255 255 255 221;							\
			visible: 0;										\
			rel1 {											\
				to: "icon_box";								\
				relative: 0.0 0.0;							\
				offset: -4 -4;								\
			}												\
			rel2 {											\
				to: "icon_box";								\
				relative: 1.0 1.0;							\
				offset: 3 3;								\
			}												\
			image {											\
				normal: "images/fileman_im1.png";			\
				border: 8 8 8 8;							\
			}												\
		}													\
		description {										\
			state: "visible" 0.0;							\
			inherit: "default" 0.0;							\
			visible: 1;										\
		}													\
	}														\
	part {													\
		name: "icon_box";									\
		type: RECT;											\
		mouse_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			visible: 0;										\
			align: 0.5 0.5;									\
			color: 7 7 7 192;								\
			rel1 {											\
				to: "e.swallow.icon";						\
				relative: 0.0 0.0;							\
				offset: -1 -1;								\
			}												\
			rel2 {											\
				to: "e.swallow.icon";						\
				relative: 1.0 1.0;							\
				offset: 0 0;								\
			}												\
		}													\
		description {										\
			state: "visible" 0.0;							\
			inherit: "default" 0.0;							\
			visible: 1;										\
		}													\
	}														\
	part {													\
		name: "icon_box_bg";								\
		type: IMAGE;										\
		mouse_events: 0;									\
		clip_to: "e.swallow.icon_clip";						\
		description {										\
			state: "default" 0.0;							\
			visible: 0;										\
			rel1 {											\
				to: "icon_box";								\
				relative: 0.0 0.0;							\
				offset: 1 1;								\
			}												\
			rel2 {											\
				to: "icon_box";								\
				relative: 1.0 1.0;							\
				offset: -2 -2;								\
			}												\
			image {											\
				normal: "images/fileman_im2.png";			\
			}												\
			fill {											\
				smooth: 0;									\
				size {										\
					relative: 0 0;							\
					offset: 16 16;							\
				}											\
			}												\
		}													\
		description {										\
			state: "visible" 0.0;							\
			inherit: "default" 0.0;							\
			visible: 1;										\
		}													\
	}														\
	part {													\
		name: "icon0";										\
		type: RECT;											\
		mouse_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			align: ALIGN;									\
			aspect: 1.0 1.0;								\
			aspect_preference: VERTICAL;					\
			color: 0 0 0 0;									\
			visible: 0;										\
			rel1 {											\
				relative: REL1;								\
				offset: OFF1;								\
			}												\
			rel2 {											\
				relative: REL2;								\
				offset: OFF2;								\
			}												\
		}													\
	}														\
	part {													\
		name: "icon";										\
		type: RECT;											\
		mouse_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			align: 0.5 0.5;									\
			aspect: 1.0 1.0;								\
			aspect_preference: BOTH;						\
			color: 0 0 0 0;									\
			visible: 0;										\
			rel1 {											\
				to: "icon0";								\
			}												\
			rel2 {											\
				to: "icon0";								\
			}												\
		}													\
		description {										\
			state: "min" 0.0;								\
			inherit: "default" 0.0;							\
			max: 0 0;										\
		}													\
		description {										\
			state: "max" 0.0;								\
			inherit: "default" 0.0;							\
			rel1 {											\
				to: "icon0";								\
				relative: 0.0 0.0;							\
				offset: -4 -4;								\
			}												\
			rel2 {											\
				to: "icon0";								\
				relative: 1.0 1.0;							\
				offset: 3 3;								\
			}												\
		}													\
		description {										\
			state: "max2" 0.0;								\
			inherit: "default" 0.0;							\
			rel1 {											\
				to: "icon0";								\
				relative: 0.0 0.0;							\
				offset: -2 -2;								\
			}												\
			rel2 {											\
				to: "icon0";								\
				relative: 1.0 1.0;							\
				offset: 1 1;								\
			}												\
		}													\
	}														\
	part {													\
		name: "e.swallow.icon";								\
		type: SWALLOW;										\
		clip_to: "e.swallow.icon_clip";						\
		description {										\
			state: "default" 0.0;							\
			aspect: 1.0 1.0;								\
			aspect_preference: BOTH;						\
			align: 0.5 0.5;									\
			color: 255 255 255 128;							\
			rel1 {											\
				to: "icon";									\
			}												\
			rel2 {											\
				to: "icon";									\
			}												\
		}													\
	}														\
	part {													\
		name: "e.swallow.icon_clip";						\
		type: RECT;											\
		mouse_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			color: 235 235 235 255;							\
		}													\
		description {										\
			state: "hover" 0.0;								\
			color: 255 255 255 255;							\
		}													\
		description {										\
			state: "selected" 0.0;							\
			color: 229 229 229 255;							\
		}													\
	}														\

#define LIST_DND_ACTION										\
	part {													\
		name: "dnd_action";									\
		type: IMAGE;										\
		mouse_events: 0;									\
		repeat_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			visible: 0;										\
		}													\
		description {										\
			state: "visible" 0.0;							\
			min: 24 24;										\
			max: 24 24;										\
			fixed: 1 1;										\
			visible: 1;										\
			rel1 {											\
				to_x: "icon";								\
				to_y: "icon";								\
				relative: 0.95 0.85;						\
				offset: 0 0;								\
			}												\
			rel2 {											\
				to: "icon";									\
				relative: 1.0 0.85;							\
				offset: -1 -1;								\
			}												\
		}													\
		description {										\
			state: "copy" 0.0;								\
			inherit: "visible" 0.0;							\
			image.normal: "icons/icon_efm_dnd_copy.png";	\
		}													\
		description {										\
			state: "ask" 0.0;								\
			inherit: "visible" 0.0;							\
			image.normal: "icons/icon_efm_dnd_ask.png";		\
		}													\
		description {										\
			state: "move" 0.0;								\
			inherit: "visible" 0.0;							\
			image.normal: "icons/icon_efm_dnd_move.png";	\
		}													\
	}														\

#define FILEMAN_DND_PROGS									\
	program {												\
		name: "ask";										\
		signal: "e,state,ask";								\
		source: "e";										\
		action: STATE_SET "ask" 0.0;						\
		target: "dnd_action";								\
	}														\
	program {												\
		name: "move";										\
		signal: "e,state,move";								\
		source: "e";										\
		action: STATE_SET "move" 0.0;						\
		target: "dnd_action";								\
	}														\
	program {												\
		name: "copy";										\
		signal: "e,state,copy";								\
		source: "e";										\
		action: STATE_SET "copy" 0.0;						\
		target: "dnd_action";								\
	}														\

#define FILEMAN_LIST_PROGS									\
	program {												\
		name: "active_list";								\
		signal: "e,state,selected";							\
		source: "e";										\
		action: STATE_SET "selected" 0.0;					\
		transition: DECELERATE 0.3;							\
		target: "base";										\
	}														\
	program {												\
		name: "unactive_list";								\
		signal: "e,state,unselected";						\
		source: "e";										\
		action: STATE_SET "default" 0.0;					\
		transition: DECELERATE 0.3;							\
		target: "base";										\
	}														\
	program {												\
		name: "active_text";								\
		signal: "e,state,selected";							\
		source: "e";										\
		action: STATE_SET "selected" 0.0;					\
		target: "e.text.label";								\
	}														\
	program {												\
		name: "unactive_text";								\
		signal: "e,state,unselected";						\
		source: "e";										\
		action: STATE_SET "default" 0.0;					\
		target: "e.text.label";								\
	}														\

#define FILEMAN_THUMB_PROGS									\
	program {												\
		name: "thumb_gen";									\
		signal: "e,action,thumb,gen";						\
		source: "e";										\
		action: STATE_SET "visible" 0.0;					\
		target: "icon_box";									\
		target: "icon_box_bg";								\
		/* after: "thumb_gen2"; */							\
		after: "thumb_gen6";								\
	}														\
	program {												\
		name: "thumb_gen-";									\
		signal: "e,action,thumb,gen,alpha";					\
		source: "e";										\
		action: STATE_SET "default" 0.0;					\
		target: "icon_box";									\
		target: "icon_box_bg";								\
		target: "icon";										\
		/*after: "thumb_gen2";*/							\
	}														\
	program {												\
		name: "thumb_gen2";									\
		action: STATE_SET "min" 0.0;						\
		target: "icon";										\
		after: "thumb_gen3";								\
	}														\
	program {												\
		name: "thumb_gen3";									\
		action: STATE_SET "max" 0.0;						\
		target: "icon";										\
		transition: DECELERATE 0.25;						\
		after: "thumb_gen4";								\
	}														\
	program {												\
		name: "thumb_gen4";									\
		action: STATE_SET "default" 0.0;					\
		target: "icon";										\
		after: "thumb_gen5";								\
	}														\
	program {												\
		name: "thumb_gen5";									\
		action: STATE_SET "max2" 0.0;						\
		target: "icon";										\
		after: "thumb_gen6";								\
	}														\
	program {												\
		name: "thumb_gen6";									\
		action: STATE_SET "default" 0.0;					\
		target: "icon";										\
	}														\


#define FILEMAN_VOL_PROGS									\
	program {												\
		name: "vol_off";									\
		signal: "e,state,volume,off";						\
		source: "e";										\
		action: STATE_SET "default" 0.0;					\
		target: "vol_state";								\
	}														\
	program {												\
		name: "vol_unmounted";								\
		signal: "e,state,volume,unmounted";					\
		source: "e";										\
		action: STATE_SET "unmounted" 0.0;					\
		target: "vol_state";								\
	}														\
	program {												\
		name: "vol_mounted";								\
		signal: "e,state,volume,mounted";					\
		source: "e";										\
		action: STATE_SET "mounted" 0.0;					\
		target: "vol_state";								\
	}

#define LIST_LABEL											\
	part {													\
		name: "e.text.label";								\
		type: TEXT;											\
		effect: SHADOW;										\
		mouse_events: 0;									\
		scale: 1;											\
		description {										\
			state: "default" 0.0;							\
			min: 16 16;										\
			TEXT_COLOR;										\
			rel1 {											\
				to_x: "icon0";								\
				relative: 1.0 0.0;							\
				offset: 6 6;								\
			}												\
			rel2 {											\
				relative: 1.0 1.0;							\
				offset: -5 -3;								\
			}												\
			TEXT_NORMAL("ilist_item", 0.0 0.5, 1 1);		\
		}													\
		description {										\
			state: "selected" 0.0;							\
			inherit: "default" 0.0;							\
			color: 255 255 255 255;							\
			color3: 0 0 0 0;								\
		}													\
	}

#define FILEMAN_VOL_STATE(MIN, REL1, REL2)						\
	part {														\
		name: "vol_state";										\
		type: IMAGE;											\
		mouse_events: 0;										\
		repeat_events: 0;										\
		description {											\
			state: "default" 0.0;								\
			color: 0 0 0 0;										\
		}														\
		description {											\
			state: "visible" 0.0;								\
			aspect: 1.0 1.0;									\
			aspect_preference: BOTH;							\
			align: 1.0 1.0;										\
			min: MIN;											\
			rel1 {												\
				relative: REL1;									\
				to: "icon";										\
			}													\
			rel2 {												\
				relative: REL2;									\
				to: "icon";										\
			}													\
		}														\
		description {											\
			state: "unmounted" 0.0;								\
			inherit: "visible" 0.0;								\
			image.normal: "icons/icon_efm_vol_unmounted.png";	\
		}														\
		description {											\
			state: "mounted" 0.0;								\
			inherit: "visible" 0.0;								\
			image.normal: "icons/icon_efm_vol_mounted.png";		\
		}														\
	}

#define FILEMAN_GRID_PROGS						\
	program {									\
		name: "event_in";						\
		signal: "mouse,in";						\
		source: "event";						\
		action: STATE_SET "hover" 0.0;			\
		target: "e.swallow.icon_clip";			\
	}											\
	program {									\
		name: "event_out";						\
		signal: "mouse,out";					\
		source: "event";						\
		action: STATE_SET "default" 0.0;		\
		target: "e.swallow.icon_clip";			\
	}											\
	program {									\
		name: "event_selected";					\
		signal: "e,state,selected";				\
		source: "e";							\
		action: STATE_SET "selected" 0.0;		\
		transition: ACCELERATE 0.0;				\
		target: "e.swallow.icon_clip";			\
		target: "e.text.label";					\
		target: "filename_overlay";				\
	}											\
	program {									\
		name: "event_unselected";				\
		signal: "e,state,unselected";			\
		source: "e";							\
		action: STATE_SET "default" 0.0;		\
		transition: DECELERATE 0.0;				\
		target: "e.swallow.icon_clip";			\
		target: "e.text.label";					\
		target: "filename_overlay";				\
	}

#define LIST_ICON \
	FILEMAN_ICON(0.0 0.5, 0.0 0.0, 4 4, 0.0 1.0, 4 -5)


#define GRID_ICON \
	FILEMAN_ICON(0.5 0.5, 0.0 0.0, 5 5, 1.0 1.0, -9 -40)

#define LIST_VOL_STATE \
	FILEMAN_VOL_STATE(0 0, 0.5 0.0, 1.0 1.0)

#define GRID_VOL_STATE \
	FILEMAN_VOL_STATE(16 16, 0.75 0.0, 1.0 1.0)

group { 
	name: "e/fileman/default/list/fixed";
	alias: "e/fileman/desktop/list/fixed";
	alias: "e/fileman/default/list/variable";
	data.item: "stacking" "below";
	data.item: "selectraise" "on";

	parts {
		part {
			name: "base";
			mouse_events: 0;
			type: RECT;

			description {
				state: "default" 0.0;
				color: COLOR_LIST_BG;
				min: 100 30;
			}

			description {
				state: "selected" 0.0;
				color: COLOR_LIST_BG_ACTIVE;
			}
		}

		LIST_ICON;
		LIST_LABEL;
		LIST_DND_ACTION;
		LIST_VOL_STATE;
		EVENT_RECT;
	}

	programs {
		FILEMAN_THUMB_PROGS;
		FILEMAN_LIST_PROGS;
		FILEMAN_DND_PROGS;
		FILEMAN_VOL_PROGS;
	}
}

group {
	name: "e/fileman/default/list_odd/fixed";
	alias: "e/fileman/desktop/list_odd/fixed";
	alias: "e/fileman/default/list_odd/variable";
	data.item: "stacking" "below";
	data.item: "selectraise" "on";

	parts {
		part {
			name: "base";
			mouse_events: 0;
			type: RECT;

			description {
				state: "default" 0.0;
				color: COLOR_LIST_BG_ODD;
			}

			description {
				state: "selected" 0.0;
				color: COLOR_LIST_BG_ACTIVE;
			}
		}

		LIST_ICON;
		LIST_LABEL;		
		LIST_DND_ACTION;
		LIST_VOL_STATE;
		EVENT_RECT;
	}

	programs {
		FILEMAN_LIST_PROGS;
		FILEMAN_THUMB_PROGS;
		FILEMAN_DND_PROGS;
		FILEMAN_VOL_PROGS;
	}
}

group {
	name: "e/fileman/default/icon/variable";
	alias: "e/fileman/default/icon/fixed";

	parts {

		GRID_ICON;
		
		part {
			name: "filename_overlay";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.5 0.5;
				visible: 0;

				rel1 {
					to: "e.text.label";
					relative: 0.0 0.0;
					offset: -3 -3;
				}

				rel2 {
					to: "e.text.label";
					relative: 1.0 1.0;
					offset: 2 2;
				}

				image {
					normal: "images/fileman_im4.png";
					border: 8 8 9 8;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part {
			name: "e.text.label";
			type: TEXTBLOCK;
			mouse_events: 0;
			scale: 1;
			description {
				state: "default" 0.0;
				align: 0.5 0.0;
				fixed: 1 1;
				color: 30 30 30 255;
				rel1 {
					to_y: "icon0";
					relative: 0.0 1.0;
					offset: 4 3;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -5 -1;
				}
				color_class: "fileman_icon_label_selected";
				text {
					style: "fileman_icon_name";
					min: 0 1;
					align: 0.5 0.0;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				text {
					style: "fileman_icon_name_full";
					min: 0 1;
					max: 0 1;
				}
			}
		}

		LIST_DND_ACTION;
		GRID_VOL_STATE;

		part {
			name: "event";
			type: RECT;

			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				rel1.offset: 10 10;
				rel2.offset: -11 -11;
			}
		}
	}

	programs {
		FILEMAN_GRID_PROGS;
		FILEMAN_THUMB_PROGS;
		FILEMAN_DND_PROGS;
		FILEMAN_VOL_PROGS;
	}
}

group {
	name: "e/fileman/desktop/icon/variable";
	alias: "e/fileman/desktop/icon/fixed";

	parts {

		GRID_ICON;
		
		part {
			name: "filename_overlay";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.5 0.5;
				visible: 0;

				rel1 {
					to: "e.text.label";
					relative: 0.0 0.0;
					offset: -3 -3;
				}

				rel2 {
					to: "e.text.label";
					relative: 1.0 1.0;
					offset: 2 2;
				}

				image {
					normal: "images/fileman_im4.png";
					border: 8 8 9 8;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part {
			name: "e.text.label";
			type: TEXTBLOCK;
			mouse_events: 0;
			scale: 1;
			description {
				state: "default" 0.0;
				align: 0.5 0.0;
				fixed: 1 1;
				color: 225 225 225 255;
				rel1 {
					to_y: "icon0";
					relative: 0.0 1.0;
					offset: 4 3;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -5 -1;
				}
				color_class: "fileman_icon_label_selected";
				text {
					style: "fileman_desktop_icon_name";
					min: 0 1;
					align: 0.5 0.0;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				text {
					style: "fileman_desktop_icon_name_full";
					min: 0 1;
					max: 0 1;
				}
			}
		}

		LIST_DND_ACTION;
		GRID_VOL_STATE;

		part {
			name: "event";
			type: RECT;

			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				rel1.offset: 10 10;
				rel2.offset: -11 -11;
			}
		}
	}

	programs {
		FILEMAN_GRID_PROGS;
		FILEMAN_THUMB_PROGS;
		FILEMAN_DND_PROGS;
		FILEMAN_VOL_PROGS;
	}
}

group {
	name: "e/fileman/default/window/main";

	parts {
		part {
			name: "background";
			type: RECT;

			description {
				state: "default" 0.0;
				color: 245 245 245 255;
			}
		}

		part {
			name: "base";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				color: 205 204 188 2;
				visible: 0;
				image {
					normal: "images/wallpaper_pat1.png";
				}

				fill {
					smooth: 0;
					size {
						relative: 0 0;
						offset: 35 35;
					}
				}
			}
		}

		part {
			name: "top_shadow";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 0 10;
				max: 9999 10;
				color: 255 255 255 129;

				rel1 {
					to: "base";
					relative: 0.0 0.0;
					offset: 0 8;
				}

				rel2 {
					to: "base";
					relative: 1.0 0.0;
					offset: -1 -1;
				}

				image {
					normal: "images/fileman_im5.png";
					border: 1 1 1 1;
				}

				fill {
					smooth: 0;
				}
			}
		}
	}
}

/* controls aspect of efm window overlay */

group {
	name: "e/fileman/default/overlay";
	alias: "e/fileman/desktop/overlay";

	parts {
		part {
			name: "overlay";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				align: 0.5 0.5;
				color: 255 255 255 0;

				rel1 {
					to: "e.text.typebuf_label";
					relative: 0.0 0.0;
					offset: -6 -4;
				}

				rel2 {
					to: "e.text.typebuf_label";
					relative: 1.0 1.0;
					offset: 4 3;
				}

				image {
					normal: "images/ibar_im3.png";
					border: 7 7 10 8;
				}
			}

			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
			}
		}

		part {
			name: "e.text.typebuf_label";
			type: TEXT;
			effect: SHADOW;
			mouse_events: 0;
			clip_to: "typebuf_clip";
			scale: 1;

			description {
				state: "default" 0.0;
				align: 0.5 1.0;
				max: 120 26;
				TEXT_COLOR_WHITE;

				rel1 {
					relative: 0.0 0.0;
					offset: 6 4;
				}

				rel2 {
					relative: 1.0 1.0;
					offset: -5 -55;
				}

				TEXT_LARGE("fileman_typebuf", 0.0 0.5, 0 0);
				/* elipsis: 0.5; */
			}
		}

		part {
			name: "busy";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "busy_clip";

			description {
				state: "default" 0.0;
				min: 42 42;
				max: 42 42;
				fixed: 1 1;
				align: 0.5 0.5;

				rel1 {
					relative: 0.0 0.0;
					offset: 8 8;
				}

				rel2 {
					relative: 1.0 1.0;
					offset: -9 -9;
				}

				image {
					normal: "images/cursor_im0.png";
					tween:  "images/cursor_im1.png";
					tween:  "images/cursor_im2.png";
					tween:  "images/cursor_im3.png";
					normal: "images/cursor_im0.png";
					tween:  "images/cursor_im1.png";
					tween:  "images/cursor_im2.png";
					tween:  "images/cursor_im3.png";
				}
			}
		}

		part {
			name: "busy.overlay";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				align: 0.5 0.5;
				color: 7 7 7 0;

				rel1 {
					to: "e.text.busy_label";
					relative: 0.0 0.0;
					offset: -8 -1;
				}

				rel2 {
					to: "e.text.busy_label";
					relative: 1.0 1.0;
					offset: 7 -1;
				}

				image {
					normal: "images/ibar_im0.png";
					border: 5 5 5 5;
				}
			}

			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				color: 7 7 7 164;
			}
		}

		part {
			name: "e.text.busy_label";
			type: TEXT;
			effect: SHADOW;
			mouse_events: 0;
			clip_to: "busy_clip";
			scale: 1;

			description {
				state: "default" 0.0;
				align: 0.5 0.5;
				TEXT_COLOR_WHITE;

				rel1 {
					to: "busy";
					relative: 0.0 0.5;
					offset: 8 48;
				}

				rel2 {
					to: "busy";
					relative: 1.0 0.5;
					offset: -9 -1;
				}

				TEXT_NORMAL("fileman_notice", 1.0 1.0, 1 1);
			}
		}

		part {
			name: "busy_clip";
			type: RECT;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				color: 255 255 255 0;
				visible: 0;
			}

			description {
				state: "active" 0.0;
				color: 255 255 255 255;
				visible: 1;
			}
		}

		part {
			name: "typebuf_clip";
			type: RECT;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				color: 255 255 255 0;
				visible: 0;
			}

			description {
				state: "active" 0.0;
				color: 255 255 255 255;
				visible: 1;
			}
		}
	}

	programs {
		/* program {
		 * 		name: "go1";
		 * 		signal: "e,state,busy,start";
		 * 		source: "e";
		 * 		action: STATE_SET "active" 0.0;
		 * 		transition: LINEAR 0.15;
		 * 		target: "busy_clip";
		 * 		target: "busy.overlay";
		 * 	}
		 *
		 * 	program {
		 * 		name: "go2";
		 * 		signal: "e,state,busy,start";
		 * 		source: "e";
		 * 		action: STATE_SET "default" 0.0;
		 * 		transition: ACCELERATE 0.5;
		 * 		target: "busy";
		 * 		after: "go2";
		 * 	}
		 *
		 * 	program {
		 * 		name: "stop1";
		 * 		signal: "e,state,busy,stop";
		 * 		source: "e";
		 * 		action: STATE_SET "default" 0.0;
		 * 		transition: ACCELERATE 0.25;
		 * 		target: "busy_clip";
		 * 		target: "busy.overlay";
		 * 		after: "stop2"; in: 2.0 0.0;
		 * 	}
		 *
		 * 	program {
		 * 		name: "stop2";
		 * 		action: ACTION_STOP;
		 * 		target: "go2";
		 * 	} */

		program {
			name: "gob1";
			signal: "e,state,typebuf,start";
			source: "e";
			action: STATE_SET "active" 0.0;
			transition: LINEAR 0.25;
			target: "overlay";
			target: "typebuf_clip";
		}

		program {
			name: "stopb1";
			signal: "e,state,typebuf,stop";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "overlay";
			target: "typebuf_clip";
			/* after: "stop2"; */
		}

		/*
		 * FIXME: implement this to show drop in the blank areas
		 */

		/*
		  program {
		  name: "goc1";
		  signal: "e,state,drop,start";
		  source: "e";
		  action: STATE_SET "active" 0.0;
		  transition: SINUSOIDAL 0.25;
		  target:  "typebuf_clip";
		  }

		  program {
		  name: "stopc1";
		  signal: "e,state,drop,stop";
		  source: "e";
		  action: STATE_SET "default" 0.0;
		  transition: SINUSOIDAL 1.0;
		  target: "typebuf_clip";
		  after: "stop2";
		  }
		*/
	}
}

group {
	name: "e/fileman/default/list/drop_between";
	alias: "e/fileman/default/list/drop_in";
	alias: "e/fileman/desktop/list/drop_in";
	alias: "e/fileman/desktop/list/drop_between";

	parts {
		part {
			name: "bg";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				color: 255 255 255 255;

				rel1 {
					relative: 0.0 0.0;
				}

				rel2 {
					relative: 1.0 1.0;
				}

				image {
					normal: "images/fileman_im0.png";
					border: 26 26 26 26;
				}
			}

			description {
				state: "grow+fade" 0.0;
				color: 255 255 255 0;

				rel1 {
					relative: -0.25 -0.25;
				}

				rel2 {
					relative: 1.25 1.25;
				}

				image {
					normal: "images/fileman_im0.png";
					border: 26 26 26 26;
				}
			}
		}
	}

	programs {
		program {
			name: "go";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "grow+fade" 0.0;
			transition: LINEAR 0.25;
			target: "bg";
		}

		program {
	 		name: "stop";
	 		signal: "e,state,selected";
	 		source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.25;
			target: "bg";
		}
	}
}

group {
	name: "e/fileman/desktop/scrollframe";
	parts{
		part {
			name: "e.swallow.content";
			type: SWALLOW;

			description {
				state: "default" 0.0;

				rel1 {
					relative: 0.0 0.0;
					offset: 50 50;
				}

				rel2 {
					relative: 1.0 1.0;
					offset: 50 50;
				}
			}
		}
	}
}

group {
	name: "e/fileman/default/scrollframe";


	parts {
		part {
			name: "clipper";
			type: RECT;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				color: 255 255 255 255;
			}
		}

		part {
			name: "e.swallow.content";
			clip_to: "clipper";
			type: SWALLOW;

			description {
				state: "default" 0.0;

				rel1 {
					relative: 0.0 0.0;
					offset: 10 10;
				}

				rel2 {
					relative: 0.0 0.0;
					offset: 0 0;
					to_x: "sb_vbar";
					to_y: "sb_hbar";
				}
			}
		}

		/* vertical scrollbara */
		part {
			name: "sb_vbar";
			type: RECT;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 15 15;
				align: 1.0 0.0;

				rel1 {
					relative: 1.0 0.0;
					offset: -15 -1;
				}

				rel2 {
					relative: 1.0 0.0;
					offset: -1 0;
					to_y: "sb_hbar";
				}
			}

			description {
				state: "hidden" 0.0;
				max: 0 99999;
				visible: 0;

				rel1 {
					relative: 1.0 0.0;
					offset: 0 1;
				}

				rel2 {
					relative: 1.0 0.0;
					offset: -3 0;
					to_y: "sb_hbar";
				}
			}
		}

		part {
			name: "sb_vbar_bg";
			type: RECT;
			mouse_events: 0;
			/* clip_to: "sb_vbar"; */

			description {
				state: "default" 0.0;
				color: 211 211 212 255;
				rel1 {
					to: "sb_vbar";
				}
				rel2 {
					/* this overlaps the bottom roght corner
					 * between scrollbars */
					relative: 1.0 1.0;
				}
			}
		}
		part {
			name: "sb_vbar_bg_line";
			type: RECT;
			mouse_events: 0;
			clip_to: "sb_vbar";

			description {
				state: "default" 0.0;
				color: 180 180 180 255;
				rel1 {
					to: "sb_vbar";
				}

				rel2 {
					to: "sb_vbar";
					relative: 0.0 1.0;
					offset: 0 -1;
				}
			}
		}

		part {
			name: "sb_vbar_base";
			type: RECT;
			mouse_events: 0;
			clip_to: "sb_vbar";

			description {
				state: "default" 0.0;
				visible: 0;
				rel1 {
					to: "sb_vbar";
					relative: 0.0 0.0;
					offset: 0 14;
				}

				rel2 {
					to: "sb_vbar";
					relative: 1.0 1.0;
					offset: 0 -15;
				}
			}
		}

		part {
			name: "sb_vbar_runner";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "sb_vbar";

			description {
				state: "default" 0.0;
                max: 16 99999;
                min: 16 44;
				fixed: 1 0;

				rel1 {
					to: "sb_vbar_base";
				}

				rel2 {
					to: "sb_vbar_base";
				}

				image {
					normal: "images/scrollframe/trough_v.png";
					border: 8 8 7 8;
				}
			}
		}

		part {
			name: "e.dragable.vbar.clip";
			type: RECT;
			clip_to: "sb_vbar";
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 14 36;
				max: 14 9999;
				color: 255 255 255 255;

				rel1 {
					to: "sb_vbar_base";
					relative: 0.0 0.0;
					offset: 0 0;
				}

				rel2 {
					to: "sb_vbar_base";
					relative: 1.0 1.0;
					offset: 0 -1;
				}
			}

			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 235 235 235 255;
			}
		}

		part {
			name: "e.dragable.vbar";
			type: IMAGE;
			mouse_events: 1;
			clip_to: "e.dragable.vbar.clip";

			dragable {
				x: 0 0 0;
				y: 1 1 0;
				confine: "e.dragable.vbar.clip";
			}

			description {
				state: "default" 0.0;
				min: 14 36;
				max: 14 9999;
				fixed: 1 1;

				rel1 {
					to: "e.dragable.vbar.clip";
					relative: 0.5 0.5;
					offset: 0 0;
				}

				rel2 {
					to: "e.dragable.vbar.clip";
					relative: 0.5 0.5;
					offset: 0 0;
				}

				image {
					normal: "images/scrollframe-bar_im2.png";
					border: 6 6 6 6;
				}
			}

			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
			}
		}

		part {
			name: "vbar_stipple";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "sb_vbar";
			clip_to: "e.dragable.vbar.clip";

			description {
				state: "default" 0.0;
				min: 7 11;
				max: 7 11;
				fixed: 1 1;

				rel1 {
					to: "e.dragable.vbar";
					offset: 0 8;
				}

				rel2 {
					to: "e.dragable.vbar";
					offset: 0 -8;
				}

				image {
					normal: "images/scrollframe-bar_im3.png";
					border: 2 2 2 2;
				}
			}

			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 215 215 215 255;
			}
		}

		part {
			name: "vbar_a1_arrow";
			type: IMAGE;
			mouse_events: 1;
			clip_to: "sb_vbar";

			description {
				state: "default" 0.0;
				min: 17 13;
				max: 17 13;
				fixed: 1 1;
				align: 0.5 0.0;

				rel1 {
					to: "sb_vbar";
					relative: 0.0 0.0;
				}

				rel2 {
					to: "sb_vbar";
					relative: 1.0 0.0;
				}

				image {
					normal: "images/scrollbar_im8.png";
				}
			}

			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 215 215 215 255;
			}
		}

		part {
			name: "vbar_a2_arrow";
			type: IMAGE;
			mouse_events: 1;
			clip_to: "sb_vbar";

			description {
				state: "default" 0.0;
				min: 17 13;
				max: 17 13;
				fixed: 1 1;
				align: 0.5 1.0;

				rel1 {
					to: "sb_vbar";
					relative: 0.0 1.0;
					offset: 0 0;
				}

				rel2 {
					to: "sb_vbar";
					relative: 1.0 1.0;
					offset: 0 -1;
				}

				image {
					normal: "images/scrollbar_im9.png";
				}
			}

			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 215 215 215 255;
			}
		}

		/* Horizontal scrollbar */
		part {
			name: "sb_hbar";
			type: RECT;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				visible: 0;

				rel1 {
					relative: 0.0 1.0;
					offset: 0 0;
				}

				rel2 {
					relative: 0.0 1.0;
					offset: 1 -3;
					to_x: "sb_vbar";
				}
			}
			description {
				state: "show" 0.0;
				min: 15 15;
				align: 0.0 1.0;
				color: 255 255 255 255;

				rel1 {
					relative: 0.0 1.0;
					offset: 0 -15;
				}

				rel2 {
					relative: 0.0 1.0;
					offset: -1 -1;
					to_x: "sb_vbar";
				}
			}
		}

		part {
			name: "sb_hbar_bg";
			type: RECT;
			mouse_events: 0;
			clip_to: "sb_hbar";

			description {
				state: "default" 0.0;
				color: 231 231 232 255;
				rel1 {
					to: "sb_hbar";
				}

				rel2 {
					to: "sb_hbar";
				}
			}
		}

		part {
			name: "sb_hbar_bg_line";
			type: RECT;
			mouse_events: 0;
			clip_to: "sb_hbar";

			description {
				state: "default" 0.0;
				color: 200 200 200 255;
				rel1 {
					to: "sb_hbar";
				}

				rel2 {
					to: "sb_hbar";
					relative: 1.0 0.0;
					offset: 0 0;
				}
			}
		}

		part {
			name: "sb_hbar_base";
			type: RECT;
			mouse_events: 1;
			clip_to: "sb_hbar";

			description {
				state: "default" 0.0;
				visible: 0;

				rel1 {
					to: "sb_hbar";
					relative: 0.0 0.0;
					offset: 14 0;
				}

				rel2 {
					to: "sb_hbar";
					relative: 1.0 1.0;
					offset: -15 0;
				}
			}
		}

		part {
			name: "sb_hbar_runner";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "sb_hbar";

			description {
				state: "default" 0.0;
                min: 55 16;
                max: 99999 16;
				rel1.to: "sb_hbar_base";
				rel2.to: "sb_hbar_base";

				image {
					normal: "images/scrollframe/trough_v.png";
					border: 8 7 8 8;
				}
			}
		}

		part {
			name: "e.dragable.hbar.clip";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "sb_hbar";

			description {
				state: "default" 0.0;
				min: 36 14;
				max: 9999 14;
				fixed: 1 1;
				color: 255 255 255 255;

				rel1 {
					to: "sb_hbar_base";
					relative: 0.0 0.0;
					offset: 0 0;
				}

				rel2 {
					to: "sb_hbar_base";
					relative: 1.0 1.0;
					offset: -1 0;
				}
			}

			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 235 235 235 255;
			}
		}

		part {
			name: "e.dragable.hbar";
			type: IMAGE;
			mouse_events: 1;
			clip_to: "sb_hbar";

			dragable {
				x: 1 1 0;
				y: 0 0 0;
				confine: "e.dragable.hbar.clip";
			}

			description {
				state: "default" 0.0;
				min: 36 14;
				max: 72 14;
				fixed: 0 1;

				rel1 {
					to: "e.dragable.hbar.clip";
					relative: 0.5 0.5;
				}

				rel2 {
					to: "e.dragable.hbar.clip";
					relative: 0.5 0.5;
				}

				image {
					normal: "images/scrollframe-bar_im0.png";
					border: 6 6 6 6;
				}
			}

			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
			}
		}

		part {
			name: "hbar_stipple";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "sb_hbar";

			description {
				state: "default" 0.0;
				min: 11 7;
				max: 11 7;
				fixed: 1 1;

				rel1 {
					to: "e.dragable.hbar";
					offset: 8 0;
				}

				rel2 {
					to: "e.dragable.hbar";
					offset: -8 0;
				}

				image {
					normal: "images/scrollframe-bar_im1.png";
					border: 2 2 2 2;
				}
			}

			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
			}
		}

		part {
			name: "hbar_arrow_a1";
			type: IMAGE;
			mouse_events: 1;
			clip_to: "sb_hbar";

			description {
				state: "default" 0.0;
				min: 13 17;
				max: 13 17;
				fixed: 1 1;
				align: 0.0 0.5;

				rel1 {
					to: "sb_hbar";
					relative: 0.0 0.0;
				}

				rel2 {
					to: "sb_hbar";
					relative: 0.0 1.0;
				}

				image {
					normal: "images/scrollbar_im6.png";
				}
			}

			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 215 215 215 255;
			}
		}

		part {
			name: "hbar_arrow_a2";
			type: IMAGE;
			mouse_events: 1;
			clip_to: "sb_hbar";

			description {
				state: "default" 0.0;
				min: 13 17;
				max: 13 17;
				fixed: 1 1;
				align: 1.0 0.5;

				rel1 {
					to: "sb_hbar";
					relative: 1.0 0.0;
					offset: 0 0;
				}

				rel2 {
					to: "sb_hbar";
					relative: 1.0 1.0;
					offset: -1 0;
				}

				image {
					normal: "images/scrollbar_im7.png";
				}
			}

			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 215 215 215 255;
			}
		}
	}

	/* horizontal programs */
	programs {
		program {
			name: "sb_hbar_show";
			signal: "e,action,show,hbar";
			source: "e";
			action: STATE_SET "show" 0.0;
			target: "sb_hbar";
		}

		program {
			name: "sb_hbar_hide";
			signal: "e,action,hide,hbar";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "sb_hbar";
		}

		program {
			name: "sb_hbar_a1_down2";
			signal: "mouse,down,1";
			source: "hbar_a1_arrow";
			action: DRAG_VAL_STEP -1.0 0.0;
			target: "e.dragable.hbar";
		}

		program {
			name: "sb_hbar_a2_down2";
			signal: "mouse,down,1";
			source: "hbar_a2_arrow";
			action: DRAG_VAL_STEP 1.0 0.0;
			target: "e.dragable.hbar";
		}

		/* program {
		 * 	name: "sb_hbar_p1_down";
		 * 	signal: "mouse,down,1";
		 * 	source: "sb_hbar_p1";
		 * 	action: DRAG_VAL_PAGE -1.0 0.0;
		 * 	target: "e.dragable.hbar";
		 * }
		 *
		 * program {
		 * 	name: "sb_hbar_p2_down";
		 * 	signal: "mouse,down,1";
		 * 	source: "sb_hbar_p2";
		 * 	action: DRAG_VAL_PAGE 1.0 0.0;
		 * 	target: "e.dragable.hbar";
		 * } */

		program {
			name: "sb_hbar_down";
			signal: "mouse,down,1";
			source: "e.dragable.hbar";
			action: STATE_SET "clicked" 0.0;
			transition: DECELERATE 0.15;
			target: "e.dragable.hbar.clip";
 		}

		program {
			name: "sb_hbar_up";
			signal: "mouse,up,1";
			source: "e.dragable.hbar";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.5;
			target: "e.dragable.hbar.clip";
		}

		/*
		  program {
		  name: "sb_hbar_in";
		  signal: "mouse,in";
		  source: "e.dragable.hbar";
		  action:  STATE_SET "hilited" 0.0;
		  target: "e.dragable.hbar";
		  target: "hbar_stipple";
		  }

		  program {
		  name: "sb_hbar_out";
		  signal: "mouse,out";
		  source: "e.dragable.hbar";
		  action:  STATE_SET "default" 0.0;
		  target: "e.dragable.hbar";
		  target: "hbar_stipple";
		  }

		  program {
		  name: "sb_hbar_a1_down";
		  signal: "mouse,down,1";
		  source: "sb_hbar_a1";
		  action: STATE_SET "clicked" 0.0;
		  transition: DECELERATE 0.15;
		  target: "arrow_a1";
		  }

		  program {
		  name: "sb_hbar_a1_up";
		  signal: "mouse,up,1";
		  source: "sb_hbar_a1";
		  action: STATE_SET "default" 0.0;
		  transition: DECELERATE 0.5;
		  target: "arrow_a1";
		  }

		  program {
		  name: "sb_hbar_a2_down";
		  signal: "mouse,down,1";
		  source: "sb_hbar_a2";
		  action: STATE_SET "clicked" 0.0;
		  transition: DECELERATE 0.15;
		  target: "arrow_a2";
		  }

		  program {
		  name: "sb_hbar_a2_up";
		  signal: "mouse,up,1";
		  source: "sb_hbar_a2";
		  action: STATE_SET "default" 0.0;
		  transition: DECELERATE 0.5;
		  target: "arrow_a2";
		  }
		*/

		/* vertical programs */
		program {
			name: "sb_vbar_show";
			signal: "e,action,show,vbar";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "sb_vbar";
		}

		program {
			name: "sb_vbar_hide";
			signal: "e,action,hide,vbar";
			source: "e";
			action: STATE_SET "hidden" 0.0;
			target: "sb_vbar";
		}

		program {
			name: "sb_vbar_a1_down2";
			signal: "mouse,down,1";
			source: "vbar_a1_arrow";
			action: DRAG_VAL_STEP 0.0 -1.0;
			target: "e.dragable.vbar";
		}

		program {
			name: "sb_vbar_a2_down2";
			signal: "mouse,down,1";
			source: "vbar_a2_arrow";
			action: DRAG_VAL_STEP 0.0 1.0;
			target: "e.dragable.vbar";
		}

		/* program {
		 * 	name: "sb_vbar_p1_down";
		 * 	signal: "mouse,down,1";
		 * 	source: "sb_vbar_p1";
		 * 	action: DRAG_VAL_PAGE 0.0 -1.0;
		 * 	target: "e.dragable.vbar";
		 * }
		 *
		 * program {
		 * 	name: "sb_vbar_p2_down";
		 * 	signal: "mouse,down,1";
		 * 	source: "sb_vbar_p2";
		 * 	action: DRAG_VAL_PAGE 0.0 1.0;
		 * 	target: "e.dragable.vbar";
		 * } */

		program {
			name: "sb_vbar_down";
			signal: "mouse,down,1";
			source: "e.dragable.vbar";
			action: STATE_SET "clicked" 0.0;
			transition: DECELERATE 0.15;
			target: "e.dragable.vbar.clip";
		}

		program {
			name: "sb_vbar_up";
			signal: "mouse,up,1";
			source: "e.dragable.vbar";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.5;
			target: "e.dragable.vbar.clip";
		}

		/*
		  program {
		  name: "sb_vbar_in";
		  signal: "mouse,in";
		  source: "e.dragable.vbar";
		  action:  STATE_SET "hilited" 0.0;
		  target: "e.dragable.vbar";
		  target: "vbar_stipple";
		  }

		  program {
		  name: "sb_vbar_out";
		  signal: "mouse,out";
		  source: "e.dragable.vbar";
		  action:  STATE_SET "default" 0.0;
		  target: "e.dragable.vbar";
		  target: "vbar_stipple";
		  }

		  program {
		  name: "sb_vbar_a1_down";
		  signal: "mouse,down,1";
		  source: "sb_vbar_a1";
		  action: STATE_SET "clicked" 0.0;
		  transition: DECELERATE 0.15;
		  target: "a1_arrow";
		  }

		  program {
		  name: "sb_vbar_a1_up";
		  signal: "mouse,up,1";
		  source: "sb_vbar_a1";
		  action: STATE_SET "default" 0.0;
		  transition: DECELERATE 0.5;
		  target: "a1_arrow";
		  }

		  program {
		  name: "sb_vbar_a2_down";
		  signal: "mouse,down,1";
		  source: "sb_vbar_a2";
		  action: STATE_SET "clicked" 0.0;
		  transition: DECELERATE 0.15;
		  target: "a2_arrow";
		  }

		  program {
		  name: "sb_vbar_a2_up";
		  signal: "mouse,up,1";
		  source: "sb_vbar_a2";
		  action: STATE_SET "default" 0.0;
		  transition: DECELERATE 0.5;
		  target: "a2_arrow";
		  }
		*/
	}
}

group {
	name: "e/fileman/default/rubberband";

	parts {
		part {
			name: "middle";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				color: 255 255 255 48;

				rel1 {
					to: "base";
					relative: 0.0 0.0;
					offset: 6 6;
				}

				rel2 {
					to: "base";
					relative: 1.0 1.0;
					offset: -6 -6;
				}

				image {
					normal: "images/wallpaper_pat0.png";
				}

				fill {
					smooth: 0;
					size {
						relative: 0 0;
						offset: 24 24;
					}
				}
			}
		}

		part {
			name: "base";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 16 16;
				//aspect: 1.0 1.0;

				image {
					normal: "images/fileman_im3.png";
					border: 10 10 10 10;
					middle: 0;
				}
			}
		}
	}
}

