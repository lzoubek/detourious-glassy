
#define BORDER_DEFAULT_PROGRAMS()				\
	program {									\
		name: "active";							\
		signal: "e,state,focused";				\
		source: "e";							\
		action: STATE_SET "focused" 0.0;		\
		transition: DECELERATE 0.5;				\
		target: "e.text.title";					\
		target: "border_color";					\
	}											\
	program {									\
		name: "inactive";						\
		signal: "e,state,unfocused";			\
		source: "e";							\
		action: STATE_SET "default" 0.0;		\
		transition: DECELERATE 0.5;				\
		target: "e.text.title";					\
		target: "border_color";					\
	}											\
	program {									\
		name: "close_click";					\
		signal: "mouse,down,1";					\
		source: "button-close";					\
		action: STATE_SET "clicked" 0.0;		\
		target: "button-close";					\
	}											\
	program {									\
		name: "close_unclick";					\
		signal: "mouse,up,1";					\
		source: "button-close";					\
		action: STATE_SET "default" 0.0;		\
		target: "button-close";					\
	}											\
	program {									\
		name: "max_click";						\
		signal: "mouse,down,1";					\
		source: "button-max";					\
		action: STATE_SET "clicked" 0.0;		\
		target: "button-max";					\
	}											\
	program {									\
		name: "max_unclick";					\
		signal: "mouse,up,1";					\
		source: "button-max";					\
		action: STATE_SET "default" 0.0;		\
		target: "button-max";					\
	}											\
	program {									\
		name: "min_click";						\
		signal: "mouse,down,1";					\
		source: "button-min";					\
		action: STATE_SET "clicked" 0.0;		\
		target: "button-min";					\
	}											\
	program {									\
		name: "min_unclick";					\
		signal: "mouse,up,1";					\
		source: "button-min";					\
		action: STATE_SET "default" 0.0;		\
		target: "button-min";					\
	}											\
	program {									\
		name: "urgent";							\
		signal: "e,state,urgent";				\
		source: "e";							\
		action: STATE_SET "urgent" 0.0;			\
		transition: DECELERATE 0.5;				\
		target: "e.swallow.icon";				\
		after: "urgent2";						\
	}											\
	program {									\
		name: "urgent2";						\
		signal: "";								\
		source: "";								\
		action: STATE_SET "default" 0.0;		\
		transition: DECELERATE 0.5;				\
		target: "e.swallow.icon";				\
		after: "urgent";						\
	}											\
	program {									\
		name: "stop";							\
		signal: "e,state,not_urgent";			\
		source: "e";							\
		action: ACTION_STOP;					\
		target: "urgent";						\
		target: "urgent2";						\
	}

#define BORDER_int_PROGRAMS()					\
	program {									\
		name: "active";							\
		signal: "e,state,focused";				\
		source: "e";							\
		action: STATE_SET "focused" 0.0;		\
		transition: DECELERATE 0.5;				\
		target: "e.text.title";					\
		target: "border_color";					\
	}											\
	program {									\
		name: "inactive";						\
		signal: "e,state,unfocused";			\
		source: "e";							\
		action: STATE_SET "default" 0.0;		\
		transition: DECELERATE 0.5;				\
		target: "e.text.title";					\
		target: "border_color";					\
	}											\
	program {									\
		name: "close_click";					\
		signal: "mouse,down,1";					\
		source: "button-close";					\
		action: STATE_SET "clicked" 0.0;		\
		target: "button-close";					\
	}											\
	program {									\
		name: "close_unclick";					\
		signal: "mouse,up,1";					\
		source: "button-close";					\
		action: STATE_SET "default" 0.0;		\
		target: "button-close";					\
	}											\
	program {									\
		name: "urgent";							\
		signal: "e,state,urgent";				\
		source: "e";							\
		action: STATE_SET "urgent" 0.0;			\
		transition: DECELERATE 0.5;				\
		target: "e.swallow.icon";				\
		after: "urgent2";						\
	}											\
	program {									\
		name: "urgent2";						\
		signal: "";								\
		source: "";								\
		action: STATE_SET "default" 0.0;		\
		transition: DECELERATE 0.5;				\
		target: "e.swallow.icon";				\
		after: "urgent";						\
	}											\
	program {									\
		name: "stop";							\
		signal: "e,state,not_urgent";			\
		source: "e";							\
		action: ACTION_STOP;					\
		target: "urgent";						\
		target: "urgent2";						\
	}

#define BORDER_EVENT_MAP(NAME, REL1, OFF1, REL2, OFF2)	\
	part {												\
		name: NAME;										\
		type: RECT;										\
		mouse_events: 1;								\
		description {									\
			state: "default" 0.0;						\
			color: 0 0 0 0;								\
			rel1 {										\
				relative: REL1;							\
				offset: OFF1;							\
			}											\
														\
			rel2 {										\
				relative: REL2;							\
				offset: OFF2;							\
			}											\
		}												\
	}

#define BORDER_BUTTONS(NAME, EVENT, SIZE, REL1, OFF1, REL2, OFF2, IMG)	\
	part {												\
		name: NAME"_bg";								\
		type: IMAGE;									\
		mouse_events: 0;								\
		description {									\
			state: "default" 0.0;						\
			rel1.to: NAME;								\
			rel2.to: NAME;								\
			image {										\
				normal: "images/window-border_bt0.png";	\
			}											\
		}												\
	}													\
	part {												\
		name: NAME;										\
		type: IMAGE;									\
		mouse_events: 1;								\
		description {									\
			state: "default" 0.0;						\
			min: SIZE;									\
			max: SIZE;									\
			rel1 {										\
				relative: REL1;							\
				offset: OFF1;							\
			}											\
			rel2 {										\
				relative: REL2;							\
				offset: OFF2;							\
			}											\
			image {										\
				normal: IMG;							\
			}											\
		}												\
		description {									\
			state: "clicked" 0.0;						\
			inherit: "default" 0.0;						\
			color: 215 215 215 255;						\
		}												\
	}													\
	part {												\
		name: EVENT;									\
		type: RECT;										\
		repeat_events: 1;								\
		description {									\
			state: "default" 0.0;						\
			color: 0 0 0 0;								\
			rel1.to: NAME;								\
			rel2.to: NAME;								\
		}												\
	}


#define BORDER_ICON(NAME, EVENT, TO)					\
	part {												\
		name: NAME;										\
		type: SWALLOW;									\
														\
		description {									\
			state: "default" 0.0;						\
			aspect: 1.0 1.0;							\
			align: 0.0 0.0;								\
			aspect_preference: BOTH;					\
			rel1 {										\
				to: TO;									\
				offset: 5 3;							\
			}											\
			rel2 {										\
				to: TO;									\
				offset: -1 -4;							\
			}											\
		}												\
		description {									\
			state: "urgent" 0.0;						\
			inherit: "default" 0.0;						\
			color: 255 200 200 255;						\
		}												\
	}													\
	part {												\
		name: EVENT;									\
		type: RECT;										\
		mouse_events: 1;								\
														\
		description {									\
			state: "default" 0.0;						\
			color: 0 0 0 0;								\
			rel1 {										\
				to: NAME;								\
			}											\
														\
			rel2 {										\
				to: NAME;								\
			}											\
		}												\
	}

#define BORDER_EVENT_MAP_RESIZE(LEFT, RIGHT, TOP, BOTTOM, OFFSET)		\
	BORDER_EVENT_MAP("e.event.resize.t",  0.0 0.0, 5     0,       1.0 0.0, -6     2);	\
	BORDER_EVENT_MAP("e.event.resize.l",  0.0 0.0, 0     5,       0.0 1.0, LEFT  -6);	\
	BORDER_EVENT_MAP("e.event.resize.r",  1.0 0.0, RIGHT 0,       1.0 1.0, -1    -6);	\
	BORDER_EVENT_MAP("e.event.resize.tl", 0.0 0.0, 0     0,       0.0 0.0,  5     5);	\
	BORDER_EVENT_MAP("e.event.resize.tr", 1.0 0.0, -6    0,       1.0 0.0, -1     5);	\
	BORDER_EVENT_MAP("e.event.resize.bl", 0.0 1.0, 0    -6,       0.0 1.0,  5    -1);	\
	BORDER_EVENT_MAP("e.event.resize.br", 1.0 1.0, -6   -6,       1.0 1.0, -1    -1);	\
	BORDER_EVENT_MAP("e.event.resize.b",  0.0 1.0, 5     BOTTOM,  1.0 1.0, -6    -1);	\

#define BORDER_IMAGE(IMG, _BORDER, SIZE)				\
	part {												\
		name: "border";									\
		description {									\
			state: "default" 0.0;						\
			min: SIZE;									\
			image {										\
				normal: IMG;							\
				border: _BORDER;						\
				middle: 0;								\
			}											\
		}												\
	}													\

#define BORDER_COLOR(IMG, _BORDER, SIZE)				\
	part {												\
		name: "border_color";							\
		description {									\
			state: "default" 0.0;						\
			min: SIZE;									\
			color_class: "border_frame";				\
			image {										\
				normal: IMG;							\
				border: _BORDER;						\
				middle: 0;								\
			}											\
		}												\
		description {									\
			state: "focused" 0.0;						\
			inherit: "default" 0.0;						\
			color_class: "border_frame_active";			\
		}												\
	}													\

#define BORDER_SHADOW(ALPHA)							\
	part {												\
		name: "border_shdow";							\
		type: RECT;										\
		description {									\
			state: "default" 0.0;						\
			color: 0 0 0 ALPHA;							\
		}												\
	}													\

#define BORDER_CLIENT(LEFT, RIGHT, TOP, BOTTOM)			\
	part {												\
		name: "e.swallow.client";						\
		type: SWALLOW;									\
		description {									\
			state: "default" 0.0;						\
			rel1 {										\
				offset: LEFT TOP;						\
			}											\
			rel2 {										\
				offset: RIGHT BOTTOM;					\
			}											\
		}												\
	}													\

#define BORDER_TITLE(HEIGHT, TO_LEFT, TO_RIGHT)			\
	part {												\
		name: "title.area.clip";						\
		type: RECT;										\
		mouse_events: 0;								\
		description {									\
			state: "default" 0.0;						\
			min: 1 HEIGHT;								\
			rel1 {										\
				relative: 1.0 0.0;						\
				to_x: TO_LEFT;							\
				offset: 6 0;							\
			}											\
			rel2 {										\
				to_x: TO_RIGHT;							\
				relative: 0.0 0.0;						\
				offset: -1 HEIGHT;						\
			}											\
		}												\
	}													\
	part {												\
		name: "e.text.title";							\
		type: TEXT;										\
		effect: SHADOW;									\
		mouse_events: 0;								\
		clip_to: "title.area.clip";						\
		scale: 1;										\
		description {									\
			state: "default" 0.0;						\
			rel1.to: "title.area.clip";					\
			rel2.to: "title.area.clip";					\
			rel1.offset: 0 5;							\
			rel2.offset: -1 -3;							\
			color3: 255 255 255 255;					\
			color_class: "border_title";				\
			TEXT_TITLE("title_bar", "", 0.0 0.5, 0 1);	\
		}												\
		description {									\
			state: "focused" 0.0;						\
			inherit: "default" 0.0;						\
			color3: 255 255 255 255;					\
			color_class: "border_title_active";			\
		}												\
	}


#if BUILD_FOR_COMPOSITE
#define BORDER_DATA								\
	data {										\
		item: "argb" "1";						\
	}
#else
#define BORDER_DATA								\
	data {										\
        item: "shaped" "1";						\
	}
#endif

#define TOP 23
#define LEFT 1
#define RIGHT -2
#define BOTTOM -3


group {
    name: "e/widgets/border/default/border";
    alias: "e/widgets/border/urgent/border";
    alias: "e/widgets/border/wm_app/border";
    alias: "e/widgets/border/dialog/border";

	BORDER_DATA;

    parts {
		BORDER_SHADOW(40);
		BORDER_COLOR("images/window-border-color.png", 6 6 23 2, 25 25);
		BORDER_IMAGE("images/window-border.png", 6 6 23 2, 25 25);

		BORDER_CLIENT(LEFT, RIGHT, TOP, BOTTOM);
		
		BORDER_TITLE(TOP, "e.swallow.icon", "button-min");

        BORDER_EVENT_MAP("e.event.titlebar",  0.0 0.0, 0 0, 1.0 0.0, -1 TOP);
		BORDER_EVENT_MAP_RESIZE(LEFT, RIGHT, TOP, BOTTOM, 5);

        BORDER_BUTTONS("button-close", "e.event.close",
					   20 18, 1.0 0.0, -10 1, 1.0 0.0, -30 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-max",   "e.event.maximize",
					   20 18, 1.0 0.0, -30 1, 1.0 0.0, -50 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-min",   "e.event.minimize",
					   20 18, 1.0 0.0, -50 1, 1.0 0.0, -70 TOP,
					   "images/window-border_bt2.png");

        BORDER_ICON("e.swallow.icon", "e.event.icon", "e.event.titlebar");
    }

    programs {
        BORDER_DEFAULT_PROGRAMS();
    }
}

group {
	name: "e/widgets/border/noresize_dialog/border";
    alias: "e/widgets/border/noresize/border";
    alias: "e/widgets/border/modal/border";

	BORDER_DATA;

	parts {
		BORDER_SHADOW(40);
		BORDER_COLOR("images/window-border-color.png", 6 6 23 2, 25 25);
		BORDER_IMAGE("images/window-border.png", 6 6 23 2, 25 25);
		BORDER_CLIENT(LEFT, RIGHT, TOP, BOTTOM);

		BORDER_TITLE(TOP, "e.swallow.icon", "button-close");

        BORDER_EVENT_MAP("e.event.titlebar",  0.0 0.0, 0 0, 1.0 0.0, -1 TOP);

        BORDER_BUTTONS("button-close", "e.event.close",
					   20 18, 1.0 0.0, -10 1, 1.0 0.0, -30 TOP,
					   "images/window-border_bt2.png");

        BORDER_ICON("e.swallow.icon", "e.event.icon", "e.event.titlebar");
    }
    programs {
        BORDER_int_PROGRAMS();
    }

}
#undef TOP
#undef LEFT
#undef RIGHT
#undef BOTTOM

#define TOP 23
#define LEFT 1
#define RIGHT -2
#define BOTTOM -2

group {
    name: "e/widgets/border/square/border";

    parts {
		part {
            name: "border_color";
            type: RECT;
            mouse_events: 0;
            description {
				state: "default" 0.0;
				visible: 0;
            }
		}

		BORDER_IMAGE("images/window-border-square.png", 2 2 23 1, 24 23);
		
		BORDER_CLIENT(LEFT, RIGHT, TOP, BOTTOM);
		
		BORDER_TITLE(TOP, "e.swallow.icon", "button-min");

        BORDER_EVENT_MAP("e.event.titlebar",  0.0 0.0, 0 0, 1.0 0.0, -1 TOP);
		BORDER_EVENT_MAP_RESIZE(LEFT, RIGHT, TOP, BOTTOM, 5);

        BORDER_BUTTONS("button-close", "e.event.close",
					   20 18, 1.0 0.0, -10 1, 1.0 0.0, -30 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-max",   "e.event.maximize",
					   20 18, 1.0 0.0, -30 1, 1.0 0.0, -50 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-min",   "e.event.minimize",
					   20 18, 1.0 0.0, -50 1, 1.0 0.0, -70 TOP,
					   "images/window-border_bt2.png");

        BORDER_ICON("e.swallow.icon", "e.event.icon", "e.event.titlebar");
    }

    programs {
        BORDER_DEFAULT_PROGRAMS();
    }
}

#if BUILD_FOR_COMPOSITE
#undef TOP
#undef LEFT
#undef RIGHT
#undef BOTTOM

#define TOP 22
#define LEFT 5
#define RIGHT -6
#define BOTTOM -6

group {
    name: "e/widgets/border/glass/border";

	BORDER_DATA;

    parts {
		part {
            name: "border_color";
            type: RECT;
            mouse_events: 0;
            description {
				state: "default" 0.0;
				visible: 0;
            }
		}

		BORDER_IMAGE("images/window-border-glass.png", 6 6 22 6, 28 28);
		
		BORDER_CLIENT(LEFT, RIGHT, TOP, BOTTOM);
		
		BORDER_TITLE(TOP, "e.swallow.icon", "button-min");

        BORDER_EVENT_MAP("e.event.titlebar",  0.0 0.0, 0 0, 1.0 0.0, -1 TOP);
		BORDER_EVENT_MAP_RESIZE(LEFT, RIGHT, TOP, BOTTOM, 5);

        BORDER_BUTTONS("button-close", "e.event.close",
					   20 18, 1.0 0.0, -10 1, 1.0 0.0, -30 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-max",   "e.event.maximize",
					   20 18, 1.0 0.0, -30 1, 1.0 0.0, -50 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-min",   "e.event.minimize",
					   20 18, 1.0 0.0, -50 1, 1.0 0.0, -70 TOP,
					   "images/window-border_bt2.png");

        BORDER_ICON("e.swallow.icon", "e.event.icon", "e.event.titlebar");
    }

    programs {
        BORDER_DEFAULT_PROGRAMS();
    }
}
#endif

#undef TOP
#undef LEFT
#undef RIGHT
#undef BOTTOM

group {
    name: "e/widgets/border/pixel/border";

    parts {
        part {
            name: "pixel";
            type: RECT;

            description {
                state: "default" 0.0;
                color: 104 108 111 255;
                visible: 1;

                rel1 {
                    relative: 0.0 0.0;
                    offset: 0 0;
                }

                rel2 {
                    relative: 1.0 1.0;
                    offset: -1 -1;
                }
            }
        }

		BORDER_CLIENT(1, -2, 1, -2);
	}
}

BORDER_MENU_BUTTON("basic", "empty");
BORDER_MENU_BUTTON("resize_icon", "object-resize");
BORDER_MENU_BUTTON("move_icon","object-move")

BORDER_MENU_BUTTON("close", "dialog-close");
BORDER_MENU_BUTTON("minimize", "bottom");
BORDER_MENU_BUTTON("maximize", "gtk-fullscreen");
BORDER_MENU_BUTTON("shade", "list-remove");
BORDER_MENU_BUTTON("stick", "gtk-media-record");
BORDER_MENU_BUTTON("kill", "dialog-close");
BORDER_MENU_BUTTON("locks", "button_cancel");
BORDER_MENU_BUTTON("locks_user", "button_cancel");
BORDER_MENU_BUTTON("locks_application", "button_cancel");
BORDER_MENU_BUTTON("borderless", "application-default-icon");
BORDER_MENU_BUTTON("fullscreen", "gtk-fullscreen");
BORDER_MENU_BUTTON("remember", "hint");
BORDER_MENU_BUTTON("skip_winlist", "edit-redo");
BORDER_MENU_BUTTON("sendto", "go-jump");
BORDER_MENU_BUTTON("stacking", "format-justify-fill");
BORDER_MENU_BUTTON("stack_on_top", "go-up");
BORDER_MENU_BUTTON("stack_normal", "centrejust");
BORDER_MENU_BUTTON("stack_below", "down");
BORDER_MENU_BUTTON("skip", "edit-redo");
BORDER_MENU_BUTTON("skip_pager", "edit-redo");
BORDER_MENU_BUTTON("skip_taskbar", "edit-redo");
BORDER_MENU_BUTTON("properties", "gtk-edit");

